// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RepositoryLayer;

#nullable disable

namespace RepositoryLayer.Migrations
{
    [DbContext(typeof(PawFundContext))]
    [Migration("20241024172221_v2")]
    partial class v2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "ShelterStaff"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Donor"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Volunteer"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Adopter"
                        });
                });

            modelBuilder.Entity("ModelLayer.Entities.AdoptionRegistrationForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AdopterId")
                        .HasColumnType("int");

                    b.Property<string>("IdentificationImage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("IdentificationImageBackSide")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("IncomeAmount")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("PetId")
                        .HasColumnType("int");

                    b.Property<int?>("ShelterStaffId")
                        .HasColumnType("int");

                    b.Property<string>("SocialAccount")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool?>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PetId");

                    b.HasIndex("UserId");

                    b.ToTable("Forms");
                });

            modelBuilder.Entity("ModelLayer.Entities.Certification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Desciption")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("PetId")
                        .HasColumnType("int");

                    b.Property<int>("ShelterStaffId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PetId")
                        .IsUnique();

                    b.HasIndex("ShelterStaffId");

                    b.HasIndex("UserId");

                    b.ToTable("Certifications");
                });

            modelBuilder.Entity("ModelLayer.Entities.Donation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DonorId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ShelterId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("DonorId");

                    b.HasIndex("ShelterId");

                    b.ToTable("Donations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 100000m,
                            Date = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DonorId = 6,
                            ShelterId = 1,
                            Status = false
                        },
                        new
                        {
                            Id = 2,
                            Amount = 200000m,
                            Date = new DateTime(2024, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DonorId = 7,
                            ShelterId = 1,
                            Status = false
                        },
                        new
                        {
                            Id = 3,
                            Amount = 543333m,
                            Date = new DateTime(2024, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DonorId = 8,
                            ShelterId = 2,
                            Status = false
                        },
                        new
                        {
                            Id = 4,
                            Amount = 632229m,
                            Date = new DateTime(2024, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DonorId = 9,
                            ShelterId = 2,
                            Status = false
                        },
                        new
                        {
                            Id = 5,
                            Amount = 760000m,
                            Date = new DateTime(2024, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DonorId = 7,
                            ShelterId = 2,
                            Status = false
                        });
                });

            modelBuilder.Entity("ModelLayer.Entities.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ShelterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ShelterId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("ModelLayer.Entities.EventUser", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "EventId");

                    b.HasIndex("EventId");

                    b.ToTable("EventUser");
                });

            modelBuilder.Entity("ModelLayer.Entities.FeedBack", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("FeedBacks");
                });

            modelBuilder.Entity("ModelLayer.Entities.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("ModelLayer.Entities.Pet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdoptionStatus")
                        .HasColumnType("longtext");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Breed")
                        .HasColumnType("longtext");

                    b.Property<string>("Color")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Gender")
                        .HasColumnType("longtext");

                    b.Property<string>("Image")
                        .HasColumnType("longtext");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ShelterID")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ShelterID");

                    b.HasIndex("UserID");

                    b.ToTable("Pets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdoptionStatus = "Adopted",
                            Image = "https://storage.googleapis.com/pawfund-e7fdd.appspot.com/0a5124ee-0def-454f-bfdb-b652f97acb3d.png",
                            Name = "Buddy",
                            ShelterID = 1,
                            Type = "Dog",
                            UserID = 17
                        },
                        new
                        {
                            Id = 2,
                            AdoptionStatus = "Available",
                            Image = "https://storage.googleapis.com/pawfund-e7fdd.appspot.com/0a5124ee-0def-454f-bfdb-b652f97acb3d.png",
                            Name = "Whiskers",
                            ShelterID = 1,
                            Type = "Cat"
                        },
                        new
                        {
                            Id = 3,
                            AdoptionStatus = "Adopted",
                            Image = "https://storage.googleapis.com/pawfund-e7fdd.appspot.com/0a5124ee-0def-454f-bfdb-b652f97acb3d.png",
                            Name = "Max",
                            ShelterID = 1,
                            Type = "Dog",
                            UserID = 16
                        },
                        new
                        {
                            Id = 4,
                            AdoptionStatus = "Adopted",
                            Image = "https://storage.googleapis.com/pawfund-e7fdd.appspot.com/0a5124ee-0def-454f-bfdb-b652f97acb3d.png",
                            Name = "Luna",
                            ShelterID = 1,
                            Type = "Cat",
                            UserID = 14
                        },
                        new
                        {
                            Id = 5,
                            AdoptionStatus = "Available",
                            Image = "https://storage.googleapis.com/pawfund-e7fdd.appspot.com/0a5124ee-0def-454f-bfdb-b652f97acb3d.png",
                            Name = "Bella",
                            ShelterID = 1,
                            Type = "Dog"
                        },
                        new
                        {
                            Id = 6,
                            AdoptionStatus = "Available",
                            Image = "https://storage.googleapis.com/pawfund-e7fdd.appspot.com/0a5124ee-0def-454f-bfdb-b652f97acb3d.png",
                            Name = "Lux",
                            ShelterID = 1,
                            Type = "Cat"
                        },
                        new
                        {
                            Id = 7,
                            AdoptionStatus = "Available",
                            Image = "https://storage.googleapis.com/pawfund-e7fdd.appspot.com/0a5124ee-0def-454f-bfdb-b652f97acb3d.png",
                            Name = "Dono",
                            ShelterID = 1,
                            Type = "Dog"
                        },
                        new
                        {
                            Id = 8,
                            AdoptionStatus = "Available",
                            Image = "https://storage.googleapis.com/pawfund-e7fdd.appspot.com/0a5124ee-0def-454f-bfdb-b652f97acb3d.png",
                            Name = "Linker",
                            ShelterID = 1,
                            Type = "Cat"
                        },
                        new
                        {
                            Id = 9,
                            AdoptionStatus = "Adopted",
                            Image = "https://storage.googleapis.com/pawfund-e7fdd.appspot.com/0a5124ee-0def-454f-bfdb-b652f97acb3d.png",
                            Name = "Dawin",
                            ShelterID = 1,
                            Type = "Dog",
                            UserID = 15
                        },
                        new
                        {
                            Id = 10,
                            AdoptionStatus = "Available",
                            Image = "https://storage.googleapis.com/pawfund-e7fdd.appspot.com/0a5124ee-0def-454f-bfdb-b652f97acb3d.png",
                            Name = "Modor",
                            ShelterID = 2,
                            Type = "Cat"
                        },
                        new
                        {
                            Id = 11,
                            AdoptionStatus = "Available",
                            Image = "https://storage.googleapis.com/pawfund-e7fdd.appspot.com/0a5124ee-0def-454f-bfdb-b652f97acb3d.png",
                            Name = "Pingking",
                            ShelterID = 2,
                            Type = "Dog"
                        },
                        new
                        {
                            Id = 12,
                            AdoptionStatus = "Available",
                            Image = "https://storage.googleapis.com/pawfund-e7fdd.appspot.com/0a5124ee-0def-454f-bfdb-b652f97acb3d.png",
                            Name = "Seto",
                            ShelterID = 2,
                            Type = "Cat"
                        },
                        new
                        {
                            Id = 13,
                            AdoptionStatus = "Available",
                            Image = "https://storage.googleapis.com/pawfund-e7fdd.appspot.com/0a5124ee-0def-454f-bfdb-b652f97acb3d.png",
                            Name = "kaiba",
                            ShelterID = 2,
                            Type = "Dog"
                        },
                        new
                        {
                            Id = 14,
                            AdoptionStatus = "Available",
                            Image = "https://storage.googleapis.com/pawfund-e7fdd.appspot.com/0a5124ee-0def-454f-bfdb-b652f97acb3d.png",
                            Name = "Asuka",
                            ShelterID = 2,
                            Type = "Cat"
                        },
                        new
                        {
                            Id = 15,
                            AdoptionStatus = "Available",
                            Image = "https://storage.googleapis.com/pawfund-e7fdd.appspot.com/0a5124ee-0def-454f-bfdb-b652f97acb3d.png",
                            Name = "Jax",
                            ShelterID = 2,
                            Type = "Dog"
                        },
                        new
                        {
                            Id = 16,
                            AdoptionStatus = "Available",
                            Image = "https://storage.googleapis.com/pawfund-e7fdd.appspot.com/0a5124ee-0def-454f-bfdb-b652f97acb3d.png",
                            Name = "Jihn",
                            ShelterID = 2,
                            Type = "Cat"
                        },
                        new
                        {
                            Id = 18,
                            AdoptionStatus = "Available",
                            Image = "https://storage.googleapis.com/pawfund-e7fdd.appspot.com/0a5124ee-0def-454f-bfdb-b652f97acb3d.png",
                            Name = "Kaisa",
                            ShelterID = 2,
                            Type = "Dog"
                        },
                        new
                        {
                            Id = 19,
                            AdoptionStatus = "Available",
                            Image = "https://storage.googleapis.com/pawfund-e7fdd.appspot.com/0a5124ee-0def-454f-bfdb-b652f97acb3d.png",
                            Name = "Bump",
                            ShelterID = 2,
                            Type = "Dog"
                        },
                        new
                        {
                            Id = 20,
                            AdoptionStatus = "Available",
                            Image = "https://storage.googleapis.com/pawfund-e7fdd.appspot.com/0a5124ee-0def-454f-bfdb-b652f97acb3d.png",
                            Name = "Rasko",
                            ShelterID = 2,
                            Type = "Dog"
                        });
                });

            modelBuilder.Entity("ModelLayer.Entities.PetStatus", b =>
                {
                    b.Property<int>("PetId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("PetId", "StatusId");

                    b.HasIndex("StatusId");

                    b.ToTable("PetStatuses");

                    b.HasData(
                        new
                        {
                            PetId = 1,
                            StatusId = 1
                        },
                        new
                        {
                            PetId = 3,
                            StatusId = 2
                        },
                        new
                        {
                            PetId = 5,
                            StatusId = 3
                        },
                        new
                        {
                            PetId = 2,
                            StatusId = 4
                        },
                        new
                        {
                            PetId = 4,
                            StatusId = 5
                        });
                });

            modelBuilder.Entity("ModelLayer.Entities.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Image")
                        .HasColumnType("longtext");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("PetId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PetId");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("ModelLayer.Entities.Shelter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BankAccount")
                        .HasColumnType("longtext");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<decimal?>("DonationAmount")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Website")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Shelters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 20,
                            Email = "PetShelter1@email.com",
                            Location = "Quận 1",
                            Name = "Shelter1",
                            PhoneNumber = "1234567890"
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 20,
                            Email = "PetShelter2@email.com",
                            Location = "Bình Dương",
                            Name = "Shelter2",
                            PhoneNumber = "0987654321"
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 20,
                            Email = "PetShelter3@email.com",
                            Location = "Thủ Đức",
                            Name = "Shelter3",
                            PhoneNumber = "821638713"
                        },
                        new
                        {
                            Id = 4,
                            Capacity = 20,
                            Email = "PetShelter4@email.com",
                            Location = "Quận 9",
                            Name = "Shelter4",
                            PhoneNumber = "8437587353"
                        });
                });

            modelBuilder.Entity("ModelLayer.Entities.SmsMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("From")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("To")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("SmsMessages");
                });

            modelBuilder.Entity("ModelLayer.Entities.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Disease")
                        .HasColumnType("longtext");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Vaccine")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Statuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Disease = "Parvovirus Infection",
                            Vaccine = "Parvovirus Vaccine"
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2024, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Disease = "Distemper Virus",
                            Vaccine = "Distemper Vaccine"
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Disease = "Rabies Virus",
                            Vaccine = "Rabies Vaccine"
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateTime(2024, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Disease = "FeLV",
                            Vaccine = "FeLV Vaccine"
                        },
                        new
                        {
                            Id = 5,
                            Date = new DateTime(2024, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Disease = "FIV",
                            Vaccine = "None"
                        });
                });

            modelBuilder.Entity("ModelLayer.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Image")
                        .HasColumnType("longtext");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Location")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .HasColumnType("longtext");

                    b.Property<int?>("ShelterId")
                        .HasColumnType("int");

                    b.Property<bool?>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Token")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("TotalDonation")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal?>("wallet")
                        .HasColumnType("decimal(18, 4)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("ShelterId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "Admin@email.com",
                            Password = "$2a$11$FipXxt9J2umllsQuS2ZcSOnbWhCg8bF8PhXfuGLZc90ptBPNr0Nb2",
                            Username = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Email = "Staff1@email.com",
                            Password = "$2a$11$m3.p71h8JEm2AcYzTjRXMOF8kDp2ji6TzWrFnGx7mJccw8HJptE9S",
                            ShelterId = 1,
                            Username = "Staff1"
                        },
                        new
                        {
                            Id = 3,
                            Email = "Staff2@email.com",
                            Password = "$2a$11$BXERY.T3cE3mC9Izydb5Lu0SrtqJCjXdoDbeKqQNGjn6bRwRuZlLe",
                            ShelterId = 1,
                            Username = "Staff2"
                        },
                        new
                        {
                            Id = 4,
                            Email = "Staff3@email.com",
                            Password = "$2a$11$1zoj0vBs7.e4oz4KPT/Mk.vo9yieiu5WgHUyKds0YmnuUvqA6jy.q",
                            ShelterId = 2,
                            Username = "Staff3"
                        },
                        new
                        {
                            Id = 5,
                            Email = "Staff4@email.com",
                            Password = "$2a$11$WVXoYWUHei2qk/mj0V/LJOOhBnIQMcPXmxD4xYJCJdLLOQlQmYF5K",
                            ShelterId = 2,
                            Username = "Staff4"
                        },
                        new
                        {
                            Id = 6,
                            Email = "Donor1@email.com",
                            Image = "https://storage.googleapis.com/pawfund-e7fdd.appspot.com/0a5124ee-0def-454f-bfdb-b652f97acb3d.png",
                            Location = "HCM",
                            Password = "$2a$11$gSZMo.B.BIe9bAqNiJaCEu0ynu1YBCj8TVzFjic4483ruQnDvrUkK",
                            Phone = "123456789",
                            Username = "Donor1"
                        },
                        new
                        {
                            Id = 7,
                            Email = "Donor2@email.com",
                            Password = "$2a$11$2r9Lc66MsZdO8ptQztyF.OsDEvbe3SNjT3.qfbd8RvpfZIUGUrATO",
                            Username = "Donor2"
                        },
                        new
                        {
                            Id = 8,
                            Email = "Donor3@email.com",
                            Password = "$2a$11$16sOLojU9mSXEGKnjgoNOO15J1CGLN2m7/rGoFfsSs7ksEw499zTW",
                            Username = "Donor3"
                        },
                        new
                        {
                            Id = 9,
                            Email = "Donor4@email.com",
                            Password = "$2a$11$7p4z6WLlbkM54Aq1hjQpC.DNdzEX4S6WROwMOgLAogzpl7R0ZVaDy",
                            Username = "Donor4"
                        },
                        new
                        {
                            Id = 10,
                            Email = "Volunteer1@email.com",
                            Password = "$2a$11$TBFkpO1wPaOOMqB6ztEN7eiAF23VV/t/0Qi6RrkagS1rGAXlLiLAi",
                            Username = "Volunteer1"
                        },
                        new
                        {
                            Id = 11,
                            Email = "Volunteer2@email.com",
                            Password = "$2a$11$WjJolw4nXhS7FwrVXBK1o.MkNT1VOm.qbUhSsCPkUa9.wvjnjfi5W",
                            Username = "Volunteer2"
                        },
                        new
                        {
                            Id = 12,
                            Email = "Volunteer3@email.com",
                            Password = "$2a$11$eTkgDWR6eQT/ZH4TJ0atkOmaZaf.Y715iweRXzztdyRFTbYBoih0e",
                            Username = "Volunteer3"
                        },
                        new
                        {
                            Id = 13,
                            Email = "Volunteer4@email.com",
                            Password = "$2a$11$CifgxnJ1KS17wgfZKoQzJ.987bjoyG/c6kdcCBom7ARPCAMn7Csii",
                            Username = "Volunteer4"
                        },
                        new
                        {
                            Id = 14,
                            Email = "Adopter1@email.com",
                            Password = "$2a$11$7Xn0brXgseMegLgOT4/JN.xsYRP4z7mmWcnp6G4YewhgNvKHBbhTu",
                            Username = "Adopter1"
                        },
                        new
                        {
                            Id = 15,
                            Email = "Adopter2@email.com",
                            Password = "$2a$11$Z2bFuwbYzfzszpoR.HGNd.hoGCnvhZMbSwD6KPhz2jGZ9pAHzyDRO",
                            Username = "Adopter2"
                        },
                        new
                        {
                            Id = 16,
                            Email = "Adopter3@email.com",
                            Password = "$2a$11$yigxpJlsSDdBfUKmQVegI.cu8BP0N/TA.d1dzA0yaj3TFZup/64BO",
                            Username = "Adopter3"
                        },
                        new
                        {
                            Id = 17,
                            Email = "Adopter4@email.com",
                            Password = "$2a$11$7AiAsFfibQjYwdaEACC5BO5IqkdA2PamUKgb.e4r5unxlshM4.9zy",
                            Username = "Adopter4"
                        });
                });

            modelBuilder.Entity("ModelLayer.Entities.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1,
                            CreatedDate = new DateTime(2024, 10, 25, 0, 22, 21, 317, DateTimeKind.Utc).AddTicks(5388),
                            Status = false
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 2,
                            CreatedDate = new DateTime(2024, 10, 25, 0, 22, 21, 317, DateTimeKind.Utc).AddTicks(5402),
                            Status = false
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 2,
                            CreatedDate = new DateTime(2024, 10, 25, 0, 22, 21, 317, DateTimeKind.Utc).AddTicks(5403),
                            Status = false
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 2,
                            CreatedDate = new DateTime(2024, 10, 25, 0, 22, 21, 317, DateTimeKind.Utc).AddTicks(5404),
                            Status = false
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 2,
                            CreatedDate = new DateTime(2024, 10, 25, 0, 22, 21, 317, DateTimeKind.Utc).AddTicks(5405),
                            Status = false
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 3,
                            CreatedDate = new DateTime(2024, 10, 25, 0, 22, 21, 317, DateTimeKind.Utc).AddTicks(5405),
                            Status = false
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 4,
                            CreatedDate = new DateTime(2024, 10, 25, 0, 22, 21, 317, DateTimeKind.Utc).AddTicks(5406),
                            Status = false
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 3,
                            CreatedDate = new DateTime(2024, 10, 25, 0, 22, 21, 317, DateTimeKind.Utc).AddTicks(5407),
                            Status = false
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 5,
                            CreatedDate = new DateTime(2024, 10, 25, 0, 22, 21, 317, DateTimeKind.Utc).AddTicks(5408),
                            Status = false
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 3,
                            CreatedDate = new DateTime(2024, 10, 25, 0, 22, 21, 317, DateTimeKind.Utc).AddTicks(5409),
                            Status = false
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 4,
                            CreatedDate = new DateTime(2024, 10, 25, 0, 22, 21, 317, DateTimeKind.Utc).AddTicks(5409),
                            Status = false
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 5,
                            CreatedDate = new DateTime(2024, 10, 25, 0, 22, 21, 317, DateTimeKind.Utc).AddTicks(5410),
                            Status = false
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 3,
                            CreatedDate = new DateTime(2024, 10, 25, 0, 22, 21, 317, DateTimeKind.Utc).AddTicks(5411),
                            Status = false
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 4,
                            CreatedDate = new DateTime(2024, 10, 25, 0, 22, 21, 317, DateTimeKind.Utc).AddTicks(5411),
                            Status = false
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 3,
                            CreatedDate = new DateTime(2024, 10, 25, 0, 22, 21, 317, DateTimeKind.Utc).AddTicks(5413),
                            Status = false
                        },
                        new
                        {
                            UserId = 11,
                            RoleId = 4,
                            CreatedDate = new DateTime(2024, 10, 25, 0, 22, 21, 317, DateTimeKind.Utc).AddTicks(5501),
                            Status = false
                        },
                        new
                        {
                            UserId = 11,
                            RoleId = 5,
                            CreatedDate = new DateTime(2024, 10, 25, 0, 22, 21, 317, DateTimeKind.Utc).AddTicks(5502),
                            Status = false
                        },
                        new
                        {
                            UserId = 12,
                            RoleId = 4,
                            CreatedDate = new DateTime(2024, 10, 25, 0, 22, 21, 317, DateTimeKind.Utc).AddTicks(5502),
                            Status = false
                        },
                        new
                        {
                            UserId = 12,
                            RoleId = 3,
                            CreatedDate = new DateTime(2024, 10, 25, 0, 22, 21, 317, DateTimeKind.Utc).AddTicks(5503),
                            Status = false
                        },
                        new
                        {
                            UserId = 12,
                            RoleId = 5,
                            CreatedDate = new DateTime(2024, 10, 25, 0, 22, 21, 317, DateTimeKind.Utc).AddTicks(5504),
                            Status = false
                        },
                        new
                        {
                            UserId = 13,
                            RoleId = 4,
                            CreatedDate = new DateTime(2024, 10, 25, 0, 22, 21, 317, DateTimeKind.Utc).AddTicks(5504),
                            Status = false
                        },
                        new
                        {
                            UserId = 14,
                            RoleId = 5,
                            CreatedDate = new DateTime(2024, 10, 25, 0, 22, 21, 317, DateTimeKind.Utc).AddTicks(5505),
                            Status = false
                        },
                        new
                        {
                            UserId = 15,
                            RoleId = 5,
                            CreatedDate = new DateTime(2024, 10, 25, 0, 22, 21, 317, DateTimeKind.Utc).AddTicks(5505),
                            Status = false
                        },
                        new
                        {
                            UserId = 15,
                            RoleId = 3,
                            CreatedDate = new DateTime(2024, 10, 25, 0, 22, 21, 317, DateTimeKind.Utc).AddTicks(5506),
                            Status = false
                        },
                        new
                        {
                            UserId = 16,
                            RoleId = 5,
                            CreatedDate = new DateTime(2024, 10, 25, 0, 22, 21, 317, DateTimeKind.Utc).AddTicks(5507),
                            Status = false
                        },
                        new
                        {
                            UserId = 16,
                            RoleId = 4,
                            CreatedDate = new DateTime(2024, 10, 25, 0, 22, 21, 317, DateTimeKind.Utc).AddTicks(5507),
                            Status = false
                        },
                        new
                        {
                            UserId = 17,
                            RoleId = 5,
                            CreatedDate = new DateTime(2024, 10, 25, 0, 22, 21, 317, DateTimeKind.Utc).AddTicks(5508),
                            Status = false
                        },
                        new
                        {
                            UserId = 17,
                            RoleId = 4,
                            CreatedDate = new DateTime(2024, 10, 25, 0, 22, 21, 317, DateTimeKind.Utc).AddTicks(5508),
                            Status = false
                        },
                        new
                        {
                            UserId = 17,
                            RoleId = 3,
                            CreatedDate = new DateTime(2024, 10, 25, 0, 22, 21, 317, DateTimeKind.Utc).AddTicks(5509),
                            Status = false
                        });
                });

            modelBuilder.Entity("ModelLayer.Entities.AdoptionRegistrationForm", b =>
                {
                    b.HasOne("ModelLayer.Entities.Pet", "Pet")
                        .WithMany("AdoptionRegistrationForms")
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelLayer.Entities.User", "User")
                        .WithMany("AdoptionRegistrationForms")
                        .HasForeignKey("UserId");

                    b.Navigation("Pet");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ModelLayer.Entities.Certification", b =>
                {
                    b.HasOne("ModelLayer.Entities.Pet", "Pet")
                        .WithOne("Certification")
                        .HasForeignKey("ModelLayer.Entities.Certification", "PetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelLayer.Entities.User", "ShelterStaff")
                        .WithMany()
                        .HasForeignKey("ShelterStaffId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ModelLayer.Entities.User", "User")
                        .WithMany("Certifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Pet");

                    b.Navigation("ShelterStaff");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ModelLayer.Entities.Donation", b =>
                {
                    b.HasOne("ModelLayer.Entities.User", "User")
                        .WithMany("Donations")
                        .HasForeignKey("DonorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ModelLayer.Entities.Shelter", "Shelter")
                        .WithMany("Donations")
                        .HasForeignKey("ShelterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shelter");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ModelLayer.Entities.Event", b =>
                {
                    b.HasOne("ModelLayer.Entities.Shelter", "Shelter")
                        .WithMany("Events")
                        .HasForeignKey("ShelterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shelter");
                });

            modelBuilder.Entity("ModelLayer.Entities.EventUser", b =>
                {
                    b.HasOne("ModelLayer.Entities.Event", "Event")
                        .WithMany("Users")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelLayer.Entities.User", "User")
                        .WithMany("Events")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ModelLayer.Entities.FeedBack", b =>
                {
                    b.HasOne("ModelLayer.Entities.Post", "Post")
                        .WithMany("FeedBacks")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelLayer.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ModelLayer.Entities.Notification", b =>
                {
                    b.HasOne("ModelLayer.Entities.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ModelLayer.Entities.Pet", b =>
                {
                    b.HasOne("ModelLayer.Entities.Shelter", "Shelter")
                        .WithMany("Pets")
                        .HasForeignKey("ShelterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelLayer.Entities.User", "User")
                        .WithMany("Pets")
                        .HasForeignKey("UserID");

                    b.Navigation("Shelter");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ModelLayer.Entities.PetStatus", b =>
                {
                    b.HasOne("ModelLayer.Entities.Pet", "Pet")
                        .WithMany("Statuses")
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelLayer.Entities.Status", "Status")
                        .WithMany("Pet")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pet");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("ModelLayer.Entities.Post", b =>
                {
                    b.HasOne("ModelLayer.Entities.Pet", "Pet")
                        .WithMany()
                        .HasForeignKey("PetId");

                    b.HasOne("ModelLayer.Entities.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pet");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ModelLayer.Entities.User", b =>
                {
                    b.HasOne("ModelLayer.Entities.Shelter", "Shelter")
                        .WithMany("Users")
                        .HasForeignKey("ShelterId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Shelter");
                });

            modelBuilder.Entity("ModelLayer.Entities.UserRole", b =>
                {
                    b.HasOne("Domain.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelLayer.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("ModelLayer.Entities.Event", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("ModelLayer.Entities.Pet", b =>
                {
                    b.Navigation("AdoptionRegistrationForms");

                    b.Navigation("Certification");

                    b.Navigation("Statuses");
                });

            modelBuilder.Entity("ModelLayer.Entities.Post", b =>
                {
                    b.Navigation("FeedBacks");
                });

            modelBuilder.Entity("ModelLayer.Entities.Shelter", b =>
                {
                    b.Navigation("Donations");

                    b.Navigation("Events");

                    b.Navigation("Pets");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("ModelLayer.Entities.Status", b =>
                {
                    b.Navigation("Pet");
                });

            modelBuilder.Entity("ModelLayer.Entities.User", b =>
                {
                    b.Navigation("AdoptionRegistrationForms");

                    b.Navigation("Certifications");

                    b.Navigation("Donations");

                    b.Navigation("Events");

                    b.Navigation("Notifications");

                    b.Navigation("Pets");

                    b.Navigation("Posts");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
